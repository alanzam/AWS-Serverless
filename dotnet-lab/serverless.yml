service: alanzam-aws-serverless-ago-18-lab # NOTE: update this with your service name

plugins:
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: dotnetcore2.0
  stage: dev
  region: us-east-1


  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "ses:SendEmail"
      Resource:
        - "*"
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - Ref: NotesBucket
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - Ref: NotesBucket
            - "/*"
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/${self:service}-table-${self:provider.stage}"


  environment:
    FromMail: azambrano30@gmail.com
    ToMail: alanzam@msn.com
    ArchiveBucketName: ${self:service}-bucket-${self:provider.stage}
    TableName: ${self:service}-table-${self:provider.stage}


package:
  artifact: bin/release/netcoreapp2.0/deploy-package.zip


functions:
  AddNote:
    handler: CsharpHandlers::TodoApp.ApiFunctions.NoteFunctions::AddNote
    events:
      - http:
          path: /
          method: post

  GetNotes:
    handler: CsharpHandlers::TodoApp.ApiFunctions.NoteFunctions::GetNotes
    events:
      - http:
          path: /
          method: get

  DeleteNote:
    handler: CsharpHandlers::TodoApp.ApiFunctions.NoteFunctions::DeleteNote
    events:
      - http:
          path: /
          method: delete

  EditNote:
    handler: CsharpHandlers::TodoApp.ApiFunctions.NoteFunctions::EditNote
    events:
      - http:
          path: /
          method: put

  CleanDatabase:
    handler: CsharpHandlers::TodoApp.DatabaseFunctions.NoteDatabaseFunctions::MoveToS3
    events:
      - schedule: rate(10 minutes)

resources:
  Resources:

    NotesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-table-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: Id
            AttributeType: S
        KeySchema:
          - AttributeName: Id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES

    NotesBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-bucket-${self:provider.stage}
